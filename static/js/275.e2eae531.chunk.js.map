{"version":3,"file":"static/js/275.e2eae531.chunk.js","mappings":"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","sources":["assects/components/SubTitle.tsx","assects/components/UniversalButton.tsx","assects/dataSet/dataSet.ts","assects/helpers/navigateTo.ts","assects/style/gCommonStyle.ts","assects/components/CustomButton.tsx","components/header/navbar/item/NavbarItem.tsx","components/header/navbar/NavbarStyle.ts","components/header/navbar/Navbar.tsx","components/header/canvas/HeaderCanvas.tsx","components/header/HeaderStyle.ts","components/header/Header.tsx"],"sourcesContent":["import React, {FC} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SubTitleStyle = styled.h2`\r\n  color: #9bc2c2;\r\n`;\r\n\r\ninterface ISubTitle {\r\n    title: string\r\n}\r\nexport const SubTitle:FC<ISubTitle> = ({title}) => {\r\n  return (\r\n    <SubTitleStyle>\r\n      {title}\r\n    </SubTitleStyle>\r\n  );\r\n};\r\n","import React, {FC, MouseEventHandler} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: #9bc2c2;\r\n  color: white;\r\n  font-weight: bold;\r\n  //width: 120px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  padding: 20px;\r\n`;\r\n\r\ninterface IUniversalButton {\r\n    title: string\r\n    type?: 'button' | 'reset' | 'submit' | undefined\r\n    disabled?: boolean\r\n    onClickNavigate?: MouseEventHandler<HTMLButtonElement>\r\n    onClickDownload?: () => void\r\n}\r\n\r\nexport const UniversalButton: FC<IUniversalButton> = ({\r\n  title,\r\n  type,\r\n  disabled,\r\n  onClickNavigate,\r\n  onClickDownload,\r\n}) => {\r\n  return (\r\n    <Button type={type} disabled={disabled} onClick={onClickNavigate || onClickDownload}>\r\n      {title}\r\n    </Button>\r\n  );\r\n};\r\n","export type valueHeadersType = 'Home' | 'About Me' | 'Works' | 'Contact'\r\nexport type scrollIdHeadersType = 'home' | 'about' | 'works' | 'contact'\r\n\r\nexport type headersDataType = {\r\n    id: number\r\n    value: valueHeadersType\r\n    scrollId: scrollIdHeadersType\r\n}\r\nexport const headersData: headersDataType[] = [\r\n  {id: 1, value: 'Home', scrollId: 'home'},\r\n  {id: 2, value: 'About Me', scrollId: 'about'},\r\n  {id: 3, value: 'Works', scrollId: 'works'},\r\n  {id: 4, value: 'Contact', scrollId: 'contact'},\r\n];\r\n\r\nexport type valueWorksDataType = 'Web Design' | 'Development' | 'Product Design' | 'Social Media'\r\n\r\nexport type worksDataType = {\r\n    id: number,\r\n    value: valueWorksDataType\r\n}\r\n\r\nexport const worksData: worksDataType[] = [\r\n  {id: 1, value: 'Web Design'},\r\n  {id: 2, value: 'Development'},\r\n  {id: 3, value: 'Product Design'},\r\n  {id: 4, value: 'Social Media'},\r\n];\r\n","export const navigateTo = (url: string) => {\r\n  window.location.href = url;\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const CommonSection = styled.div`\r\n  height: 100vh;\r\n  scroll-snap-align: center;\r\n`;\r\n\r\nexport const CommonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const CommonLeft = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const CommonTitle = styled.h1`\r\n  font-size: 74px;\r\n`;\r\n","import React, {FC} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  width: 100px;\r\n  padding: 7px;\r\n  background-color: #9bc2c2;\r\n  color: #4a4d5d;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\ninterface ICustomButton {\r\n    onClick: () => void;\r\n    searchMode: boolean;\r\n}\r\n\r\nexport const CustomButton:FC<ICustomButton> = ({searchMode, onClick}) => {\r\n  return (\r\n    <div>\r\n      <Button onClick={onClick}>{searchMode ? 'Off navigation' : 'On navigation'}</Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, {FC} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-scroll';\r\n\r\nimport {headersDataType} from '../../../../assects/dataSet/dataSet';\r\n\r\nconst ListItem = styled.li`\r\n  cursor: pointer;\r\n  margin-right: 10px;\r\n  &:hover {\r\n    color: #d2f1a7;\r\n  }\r\n`;\r\n\r\ninterface INavbarItem {\r\n    navbar: headersDataType\r\n}\r\n\r\nexport const NavbarItem: FC<INavbarItem> = ({navbar}) => {\r\n  return (\r\n    <ListItem>\r\n      <Link to={navbar.scrollId} smooth={true}>\r\n        {navbar.value}\r\n      </Link>\r\n    </ListItem>\r\n  );\r\n};\r\n","import styled from 'styled-components';\n\nimport {CommonContainer} from '../../../assects/style/gCommonStyle';\n\nexport const Section = styled.div`\n  display: flex;\n  justify-content: center;\n  \n  @media only screen and (max-width: 768px){\n    width: 100%;\n  }\n`;\nexport const Container = styled(CommonContainer)`\n  width: 1400px;\n  align-items: center;\n  padding: 10px 0px;\n\n  @media only screen and (max-width: 768px){\n    width: 100%;\n    padding: 10px;\n  }\n`;\nexport const Links = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 30px;\n`;\nexport const Logo = styled.img`\n  height: 50px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  list-style: none;\n\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`;\nexport const Icons = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  position: relative;\n`;\nexport const ListNavigation = styled.ul`\n  display: flex;\n  flex-direction: row;\n  text-align: center;\n  justify-content: stretch;\n  padding-left: 20px;\n  list-style: none;\n  position: absolute;\n  top: 100%; \n  left: -80%;\n\n  @media only screen and (min-width: 770px) {\n    display: none;\n  }\n`;\nexport const Icon = styled.img`\n  width: 30px;\n  cursor: pointer;\n  \n  @media only screen and (min-width: 770px) {\n    display: none;\n  }\n`;\nexport const Button = styled.button`\n  width: 100px;\n  padding: 10px;\n  background-color: #9bc2c2;\n  color: #4a4d5d;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n","import React, {FC, useState} from 'react';\r\n\r\nimport logoReact from '../../../assects/img/logo.png';\r\nimport searchImg from '../../../assects/img/search.png';\r\nimport {headersData} from '../../../assects/dataSet/dataSet';\r\nimport searchOpenImg from '../../../assects/img/searchOpen.png';\r\n\r\nimport {CustomButton} from '../../../assects/components/CustomButton';\r\n\r\nimport {navigateTo} from '../../../assects/helpers/navigateTo';\r\n\r\nimport {NavbarItem} from './item/NavbarItem';\r\nimport {Button, Container, Icon, Icons, Links, List, ListNavigation, Logo, Section} from './NavbarStyle';\r\n\r\ninterface INavbar {\r\n    searchMode: boolean\r\n    setSearchMode: (value: boolean) => void\r\n}\r\n\r\nexport const Navbar: FC<INavbar> = ({searchMode, setSearchMode}) => {\r\n\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n  const changeModeHandler = () => {\r\n    setSearchMode(!searchMode);\r\n  };\r\n\r\n  const openNavigationHandler = () => setIsOpen(prevState => !prevState);\r\n\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        <Links>\r\n          <Logo src={`${logoReact}`}/>\r\n          <List>\r\n            {searchMode && headersData.map(header =>\r\n              <NavbarItem key={header.id} navbar={header}/>)}\r\n            <CustomButton onClick={changeModeHandler} searchMode={searchMode}/>\r\n          </List>\r\n        </Links>\r\n        <Icons>\r\n          <ListNavigation>\r\n            {isOpen && headersData.map(header =>\r\n              <NavbarItem key={header.id} navbar={header}/>)}\r\n          </ListNavigation>\r\n          <Icon src={`${isOpen ? searchOpenImg : searchImg}`} onClick={openNavigationHandler}/>\r\n          <Button onClick={() => navigateTo('https://t.me/ilyaGoncharov93')}>Hire Now!</Button>\r\n        </Icons>\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {Canvas} from '@react-three/fiber';\r\nimport {MeshDistortMaterial, OrbitControls, Sphere} from '@react-three/drei';\r\n\r\nexport const HeaderCanvas = () => {\r\n  return (\r\n    <>\r\n      <Canvas camera={{fov: 25, position: [5, 5, 5]}}>\r\n        <OrbitControls enableZoom={false}/>\r\n        <ambientLight intensity={1}/>\r\n        <directionalLight position={[3, 2, 1]}/>\r\n        <Sphere args={[1, 100, 200]} scale={1.5}>\r\n          <MeshDistortMaterial\r\n            color=\"#ba8ae7\"\r\n            attach={'material'}\r\n            distort={0.5}\r\n            speed={2}\r\n          />\r\n        </Sphere>\r\n      </Canvas>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\n\nimport {CommonContainer, CommonSection, CommonTitle} from '../../assects/style/gCommonStyle';\n\nexport const Section = styled(CommonSection)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n\n  @media only screen and (max-width: 768px) {\n    height: 200vh;\n  }\n`;\n\nexport const Container = styled(CommonContainer)`\n  height: 100%;\n  scroll-snap-align: center;\n  width: 1400px;\n  \n  @media only screen and (max-width: 768px) {\n    width: 100%;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport const Left = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 20px;\n\n  @media only screen and (max-width: 768px) {\n    flex: 1;\n    align-items: center;\n  }\n`;\n\nexport const Title = styled(CommonTitle)`\n  @media only screen and (max-width: 768px) {\n    text-align: center;\n  }\n`;\nexport const WhatWeDo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  @media only screen and (max-width: 768px) {\n    text-align: center;\n    padding: 20px;\n  }\n`;\nexport const Line = styled.img`\n  height: 5px;\n`;\nexport const Desc = styled.p`\n  font-size: 24px;\n  color: #737d81;\n\n  @media only screen and (max-width: 768px) {\n    padding: 20px;\n    text-align: center;\n  }\n`;\nexport const Right = styled.div`\n  flex: 3;\n  position: relative;\n\n  @media only screen and (max-width: 768px) {\n    flex: 1;\n    width: 100%;\n  }\n`;\nexport const Img = styled.img`\n  width: 800px;\n  height: 600px;\n  object-fit: contain;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n  animation: animate 2s infinite ease alternate;\n\n\n  @media only screen and (max-width: 768px) {\n    width: 300px;\n    height: 300px;\n  }\n\n  @keyframes animate {\n    to {\n      transform: translateY(25px);\n    }\n  }\n`;\n","import React, {FC} from 'react';\r\n\r\n// @ts-ignore\r\nimport cv from '../../assects/cv/CvIlya.pdf';\r\nimport lineImg from '../../assects/img/line.png';\r\nimport starShipsImg from '../../assects/img/starShips.png';\r\nimport {UniversalButton} from '../../assects/components/UniversalButton';\r\n\r\nimport {SubTitle} from '../../assects/components/SubTitle';\r\n\r\nimport {Navbar} from './navbar/Navbar';\r\nimport {HeaderCanvas} from './canvas/HeaderCanvas';\r\nimport {Container, Desc, Img, Left, Line, Right, Section, Title, WhatWeDo} from './HeaderStyle';\r\n\r\ninterface IHeader {\r\n  searchMode: boolean\r\n  setSearchMode: (value: boolean) => void\r\n}\r\n\r\nconst Header: FC<IHeader> = ({searchMode, setSearchMode}) => {\r\n\r\n  const downloadFile = () => {\r\n    const file = document.createElement('a');\r\n    file.href = cv;\r\n    file.setAttribute('download', 'CvIlya.pdf');\r\n    document.body.append(file);\r\n    file.click();\r\n    file.remove();\r\n  };\r\n\r\n  return (\r\n    <Section>\r\n      <Navbar searchMode={searchMode} setSearchMode={setSearchMode}/>\r\n      <Container id={'home'}>\r\n        <Left>\r\n          <Title>Hello</Title>\r\n          <WhatWeDo>\r\n            <Line src={`${lineImg}`}/>\r\n            <SubTitle title={'That\\'s what I do'}/>\r\n          </WhatWeDo>\r\n          <Desc>\r\n           I create interesting applications, I try not to stand still.\r\n          </Desc>\r\n          <UniversalButton title={'Learn more'} onClickDownload={downloadFile}/>\r\n        </Left>\r\n        <Right>\r\n          <HeaderCanvas/>\r\n          <Img src={`${starShipsImg}`}/>\r\n        </Right>\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"names":["SubTitleStyle","styled","h2","_templateObject","_taggedTemplateLiteral","SubTitle","_ref","title","_jsx","children","Button","button","UniversalButton","type","disabled","onClickNavigate","onClickDownload","onClick","headersData","id","value","scrollId","worksData","navigateTo","url","window","location","href","CommonSection","div","CommonContainer","_templateObject2","CommonLeft","_templateObject3","CommonTitle","h1","_templateObject4","CustomButton","searchMode","ListItem","li","NavbarItem","navbar","Link","to","smooth","Section","Container","Links","Logo","img","List","ul","_templateObject5","Icons","_templateObject6","ListNavigation","_templateObject7","Icon","_templateObject8","_templateObject9","Navbar","setSearchMode","isOpen","setIsOpen","useState","_jsxs","src","concat","logoReact","map","header","changeModeHandler","searchOpenImg","openNavigationHandler","prevState","HeaderCanvas","_Fragment","Canvas","camera","fov","position","OrbitControls","enableZoom","intensity","Sphere","args","scale","MeshDistortMaterial","color","attach","distort","speed","Left","Title","WhatWeDo","Line","Desc","p","Right","Img","lineImg","downloadFile","file","document","createElement","cv","setAttribute","body","append","click","remove","starShipsImg"],"sourceRoot":""}