{"version":3,"file":"static/js/501.e7fc0401.chunk.js","mappings":"kKAGA,MAAMA,EAASC,EAAAA,GAAOC,OAAMC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gLAmBfC,EAAwCC,IAM9C,IAN+C,MACpDC,EAAK,KACLC,EAAI,SACJC,EAAQ,gBACRC,EAAe,gBACfC,GACDL,EACC,OACEM,EAAAA,EAAAA,KAACZ,EAAM,CAACQ,KAAMA,EAAMC,SAAUA,EAAUI,QAASH,GAAmBC,EAAgBG,SACjFP,GACM,C,kCChCN,MAAMQ,EAAcC,IACzBC,OAAOC,SAASC,KAAOH,CAAG,C,uHCYb,SAASI,EAAMC,GAC5B,MAAM,MAAEC,EAAK,UAAEC,IAAcC,EAAAA,EAAAA,GAAQ,iCACrC,OACEC,EAAAA,EAAAA,MAAA,YAAWJ,EAAOK,QAAS,KAAKZ,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,QAAMe,SAAUL,EAAMM,SAASD,SAC7BE,SAAUN,EAAUM,SACpBC,SAAU,CAAC,GAAI,KAAO,KACtBC,SAAU,EAAE,MAAO,GAAIC,KAAKC,GAAK,GACjCC,MAAO,CAAC,EAAG,KAAO,MAEpBtB,EAAAA,EAAAA,KAAA,QAAMe,SAAUL,EAAMa,SAASR,SAC7BE,SAAUN,EAAU,gBACpBO,SAAU,CAAC,KAAO,KAAO,MACzBC,SAAU,CAAC,EAAG,GAAIC,KAAKC,GAAK,OAIpC,CAEAT,EAAAA,EAAQY,QAAQ,iC,gBCtBhB,MAAMC,EAAOpC,EAAAA,GAAOqC,IAAGnC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oQA8BvB,EAboBmC,EAAAA,MAAW,KAE3Bd,EAAAA,EAAAA,MAAAe,EAAAA,SAAA,CAAA1B,SAAA,EACEF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAY,CAAA3B,UACXF,EAAAA,EAAAA,KAAC8B,EAAY,OAEf9B,EAAAA,EAAAA,KAACyB,EAAI,CAAAvB,UACHF,EAAAA,EAAAA,KAACP,EAAAA,EAAe,CAACE,MAAO,UAAWG,gBAAiBA,KAAMK,EAAAA,EAAAA,GAAW,wC,uFC1BtE,MAAM0B,EAAeF,EAAAA,MAAalB,IAErCI,EAAAA,EAAAA,MAACkB,EAAAA,GAAM,CAAA7B,SAAA,EACLF,EAAAA,EAAAA,KAACgC,EAAAA,EAAK,CAACC,YAAa,OAAQC,UAAW,GAAIhC,SACxCO,EAAMP,YAETF,EAAAA,EAAAA,KAACmC,EAAAA,EAAa,CAACC,YAAY,EAAOC,YAAY,Q","sources":["assects/components/UniversalButton.tsx","assects/helpers/navigateTo.ts","components/works/components/3dModel/TelegramLogo.jsx","components/works/components/SocialMedia.tsx","components/works/components/defaultModel/CustomCanvas.tsx"],"sourcesContent":["import React, {FC, MouseEventHandler} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: #9bc2c2;\r\n  color: white;\r\n  font-weight: bold;\r\n  //width: 120px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  padding: 20px;\r\n`;\r\n\r\ninterface IUniversalButton {\r\n    title: string\r\n    type?: 'button' | 'reset' | 'submit' | undefined\r\n    disabled?: boolean\r\n    onClickNavigate?: MouseEventHandler<HTMLButtonElement>\r\n    onClickDownload?: () => void\r\n}\r\n\r\nexport const UniversalButton: FC<IUniversalButton> = ({\r\n  title,\r\n  type,\r\n  disabled,\r\n  onClickNavigate,\r\n  onClickDownload,\r\n}) => {\r\n  return (\r\n    <Button type={type} disabled={disabled} onClick={onClickNavigate || onClickDownload}>\r\n      {title}\r\n    </Button>\r\n  );\r\n};\r\n","export const navigateTo = (url: string) => {\r\n  window.location.href = url;\r\n};\r\n","/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nCommand: npx gltfjsx@6.2.15 telegramLogo.gltf --transform\nFiles: telegramLogo.gltf [30.5KB] > telegramLogo-transformed.glb [35.42KB] (-16%)\nAuthor: AlbertVictory (https://sketchfab.com/albert_victory)\nLicense: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\nSource: https://sketchfab.com/3d-models/telegram-3d-icon-80421c5d474f4a3c8145ba4b9aaa7d2d\nTitle: Telegram 3D-icon\n*/\n\nimport React from 'react';\nimport {useGLTF} from '@react-three/drei';\n\nexport default function Model(props) {\n  const { nodes, materials } = useGLTF('/telegramLogo-transformed.glb');\n  return (\n    <group {...props} dispose={null}>\n      <mesh geometry={nodes.Object_4.geometry}\n        material={materials.material}\n        position={[0, -0.02, -0.04]}\n        rotation={[-2.884, 0, -Math.PI / 2]}\n        scale={[1, 0.092, 1]}\n      />\n      <mesh geometry={nodes.Object_6.geometry}\n        material={materials['Material.002']}\n        position={[0.08, -0.054, 0.031]}\n        rotation={[0, 0, -Math.PI / 2]}\n      />\n    </group>\n  );\n}\n\nuseGLTF.preload('/telegramLogo-transformed.glb');\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {UniversalButton} from '../../../assects/components/UniversalButton';\r\n\r\nimport {navigateTo} from '../../../assects/helpers/navigateTo';\r\n\r\nimport TelegramLogo from './3dModel/TelegramLogo';\r\nimport {CustomCanvas} from './defaultModel/CustomCanvas';\r\n\r\nconst Desc = styled.div`\r\n  width: 200px;\r\n  height: 70px;\r\n  padding: 20px;\r\n  bottom: 100px;\r\n  right: 100px;\r\n  position: absolute;\r\n  \r\n  @media only screen and (max-width: 768px) {\r\n    top: -300px;\r\n    bottom: 0;\r\n    //left: 0;\r\n    right: 0;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nconst SocialMedia = React.memo(() => {\r\n  return (\r\n    <>\r\n      <CustomCanvas>\r\n        <TelegramLogo/>\r\n      </CustomCanvas>\r\n      <Desc>\r\n        <UniversalButton title={'Send Me'} onClickNavigate={() => navigateTo('https://t.me/ilyaGoncharov93')}/>\r\n      </Desc>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SocialMedia;\r\n","import React, {ReactNode} from 'react';\r\nimport {Canvas} from '@react-three/fiber';\r\nimport {OrbitControls, Stage} from '@react-three/drei';\r\n\r\ntype CustomCanvasType = {\r\n    children: ReactNode\r\n}\r\n\r\nexport const CustomCanvas = React.memo( (props: CustomCanvasType) => {\r\n  return (\r\n    <Canvas>\r\n      <Stage environment={'city'} intensity={0.6}>\r\n        {props.children}\r\n      </Stage>\r\n      <OrbitControls enableZoom={false} autoRotate={true}/>\r\n    </Canvas>\r\n  );\r\n});\r\n\r\n"],"names":["Button","styled","button","_templateObject","_taggedTemplateLiteral","UniversalButton","_ref","title","type","disabled","onClickNavigate","onClickDownload","_jsx","onClick","children","navigateTo","url","window","location","href","Model","props","nodes","materials","useGLTF","_jsxs","dispose","geometry","Object_4","material","position","rotation","Math","PI","scale","Object_6","preload","Desc","div","React","_Fragment","CustomCanvas","TelegramLogo","Canvas","Stage","environment","intensity","OrbitControls","enableZoom","autoRotate"],"sourceRoot":""}