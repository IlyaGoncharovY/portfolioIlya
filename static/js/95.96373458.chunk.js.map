{"version":3,"file":"static/js/95.96373458.chunk.js","mappings":"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","sources":["assects/components/UniversalButton.tsx","assects/style/gCommonStyle.ts","components/contact/map/MapChart.tsx","components/contact/form/FormStyle.ts","components/contact/form/FormComponent.tsx","components/contact/ContactStyle.ts","components/contact/Contact.tsx"],"sourcesContent":["import React, {FC, MouseEventHandler} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: #9bc2c2;\r\n  color: white;\r\n  font-weight: bold;\r\n  //width: 120px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  padding: 20px;\r\n`;\r\n\r\ninterface IUniversalButton {\r\n    title: string\r\n    type?: 'button' | 'reset' | 'submit' | undefined\r\n    disabled?: boolean\r\n    onClickNavigate?: MouseEventHandler<HTMLButtonElement>\r\n    onClickDownload?: () => void\r\n}\r\n\r\nexport const UniversalButton: FC<IUniversalButton> = ({\r\n  title,\r\n  type,\r\n  disabled,\r\n  onClickNavigate,\r\n  onClickDownload,\r\n}) => {\r\n  return (\r\n    <Button type={type} disabled={disabled} onClick={onClickNavigate || onClickDownload}>\r\n      {title}\r\n    </Button>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const CommonSection = styled.div`\r\n  height: 100vh;\r\n  scroll-snap-align: center;\r\n`;\r\n\r\nexport const CommonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const CommonLeft = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const CommonTitle = styled.h1`\r\n  font-size: 74px;\r\n`;\r\n","import React from 'react';\r\nimport {Annotation, ComposableMap, Geographies, Geography} from 'react-simple-maps';\r\n\r\nexport const MapChart = () => {\r\n  return (\r\n    <ComposableMap\r\n      projection=\"geoAzimuthalEqualArea\"\r\n      projectionConfig={{\r\n        rotate: [-10.0, -52.0, 0],\r\n        center: [5, 5],\r\n        scale: 1100,\r\n      }}\r\n      style={{width: '100%', height: '100%'}}\r\n    >\r\n      <Geographies\r\n        geography=\"/features.json\"\r\n        fill=\"#9bc2c2\"\r\n        stroke=\"#FFFFFF\"\r\n        strokeWidth={0.5}\r\n      >\r\n        {({geographies}) =>\r\n          geographies.map((geo) => (\r\n            <Geography key={geo.rsmKey} geography={geo}/>\r\n          ))\r\n        }\r\n      </Geographies>\r\n      <Annotation\r\n        subject={[37.6176, 55.7558]}\r\n        dx={-90}\r\n        dy={-30}\r\n        connectorProps={{\r\n          stroke: '#e3d2ce',\r\n          strokeWidth: 2,\r\n          strokeLinecap: 'round',\r\n        }}\r\n      >\r\n        <text x=\"-8\" textAnchor=\"end\" alignmentBaseline=\"middle\" fill=\"white\">\r\n          {'Moscow'}\r\n        </text>\r\n      </Annotation>\r\n    </ComposableMap>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: 200;\r\n`;\r\nexport const Form = styled.form`\r\n  width: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    width: 300px;\r\n  }\r\n`;\r\nexport const Input = styled.input`\r\n  padding: 20px;\r\n  background-color: #a7aaad;\r\n  border: none;\r\n  border-radius: 5px;\r\n`;\r\nexport const TextArea = styled.textarea`\r\n  padding: 20px;\r\n  background-color: #a7aaad;\r\n  border: none;\r\n  border-radius: 5px;\r\n`;\r\n","import React, {useState} from 'react';\r\nimport * as yup from 'yup';\r\nimport Swal from 'sweetalert2';\r\nimport {useFormik} from 'formik';\r\nimport * as emailjs from 'emailjs-com';\r\n\r\nimport {UniversalButton} from '../../../assects/components/UniversalButton';\r\n\r\nimport {Form, Input, TextArea, Title} from './FormStyle';\r\n\r\nconst serviceID = process.env.REACT_APP_EMAILJS_SERVICE_ID;\r\nconst templateID = process.env.REACT_APP_EMAILJS_TEMPLATE_ID;\r\nconst userID = process.env.REACT_APP_EMAILJS_USER_ID;\r\n\r\nexport const FormComponent = () => {\r\n\r\n  const [buttonState, setButtonState] = useState<string>('Send Message');\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      from_name: '',\r\n      to_name: 'Ilya',\r\n      reply_to: '',\r\n      message: '',\r\n    },\r\n    onSubmit: (values) => {\r\n      try {\r\n        emailjs.send(serviceID!, templateID!, values, userID)\r\n          .then(() => {\r\n            Swal.fire({\r\n              icon: 'success',\r\n              title: 'your message has been sent',\r\n              timer: 1500,\r\n            });\r\n            setButtonState('Send Email');\r\n            formik.setSubmitting(false);\r\n            formik.resetForm();\r\n          });\r\n      } catch {\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Oops...',\r\n          text: 'Something went wrong!',\r\n        });\r\n        setButtonState('Send Email');\r\n        formik.setSubmitting(false);\r\n      }\r\n    },\r\n    validationSchema: yup.object({\r\n      from_name: yup.string()\r\n        .required('* Name field is required'),\r\n      reply_to: yup.string().email('Invalid email address')\r\n        .required('* Email field is required'),\r\n      message: yup.string().required('* Message field is required'),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Form onSubmit={formik.handleSubmit}>\r\n      <Title>\r\n                Contact Us\r\n      </Title>\r\n      <Input placeholder={'Name'}\r\n        id=\"from_name\"\r\n        name=\"from_name\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.from_name}\r\n      />\r\n      {formik.touched.from_name && formik.errors.from_name &&\r\n                <div style={{color: 'red', opacity: 0.8}}>{formik.errors.from_name}</div>}\r\n      <Input placeholder={'Email'}\r\n        id=\"reply_to\"\r\n        name=\"reply_to\"\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.reply_to}\r\n      />\r\n      {formik.touched.reply_to && formik.errors.reply_to &&\r\n                <div style={{color: 'red', opacity: 0.8}}>{formik.errors.reply_to}</div>}\r\n      <TextArea placeholder={'Message'}\r\n        rows={10}\r\n        id=\"message\"\r\n        name=\"message\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.message}\r\n      />\r\n      {formik.touched.message && formik.errors.message &&\r\n                <div style={{color: 'red', opacity: 0.8}}>{formik.errors.message}</div>}\r\n      <UniversalButton type={'submit'} disabled={formik.isSubmitting} title={`${buttonState}`}/>\r\n    </Form>\r\n  );\r\n};\r\n","import styled from 'styled-components';\n\nimport {CommonContainer, CommonLeft, CommonSection} from '../../assects/style/gCommonStyle';\n\nexport const Section = styled(CommonSection)`\n`;\nexport const Container = styled(CommonContainer)`\n  width: 100%;\n  height: 100%;\n  gap: 50px\n`;\nexport const Left = styled(CommonLeft)`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  \n  @media only screen and (max-width: 768px) {\n    justify-content: center;\n  }\n`;\nexport const Right = styled.div`\n  flex: 1;\n  //padding: 50px;\n  @media only screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n","import React from 'react';\r\n\r\nimport {MapChart} from './map/MapChart';\r\nimport {FormComponent} from './form/FormComponent';\r\nimport {Container, Left, Right, Section} from './ContactStyle';\r\n\r\nexport const Contact = () => {\r\n  return (\r\n    <Section id={'contact'}>\r\n      <Container>\r\n        <Left>\r\n          <FormComponent/>\r\n        </Left>\r\n        <Right>\r\n          <MapChart/>\r\n        </Right>\r\n      </Container>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["Button","styled","button","_templateObject","_taggedTemplateLiteral","UniversalButton","_ref","title","type","disabled","onClickNavigate","onClickDownload","_jsx","onClick","children","CommonSection","div","CommonContainer","_templateObject2","CommonLeft","_templateObject3","CommonTitle","h1","_templateObject4","MapChart","_jsxs","ComposableMap","projection","projectionConfig","rotate","center","scale","style","width","height","Geographies","geography","fill","stroke","strokeWidth","geographies","map","geo","Geography","rsmKey","Annotation","subject","dx","dy","connectorProps","strokeLinecap","x","textAnchor","alignmentBaseline","Title","Form","form","Input","input","TextArea","textarea","FormComponent","buttonState","setButtonState","useState","formik","useFormik","initialValues","from_name","to_name","reply_to","message","onSubmit","values","emailjs","process","then","Swal","icon","timer","setSubmitting","resetForm","text","validationSchema","yup","required","email","handleSubmit","placeholder","id","name","onChange","handleChange","value","touched","errors","color","opacity","rows","isSubmitting","concat","Section","Container","Left","Right","Contact"],"sourceRoot":""}